apiVersion: apps/v1beta2
kind: Deployment
metadata:
  name: {{ template "lena.fullname" . }}
  labels:
    app: {{ template "lena.name" . }}
    chart: {{ template "lena.chart" . }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app: {{ template "lena.name" . }}
      release: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app: {{ template "lena.name" . }}
        release: {{ .Release.Name }}
    spec:
      volumes:
        - name: app-volume
          emptyDir: {}
      initContainers:
        - name: war
          image: {{ .Values.image.webarchive.repository }}:{{ .Values.image.webarchive.tag }}
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          command:
            - "sh"
            - "-c"
            - "cp /*.war /app"
          volumeMounts:
            - name: app-volume
              mountPath: /app
      containers:
        - command:
          - ./docker-entrypoint.sh
          - -r
          - {{ .Values.lena.managerIP }}:{{ .Values.lena.managerPort}}
          - -rv
          - {{ .Values.lena.registerLevel }}
          {{if .Values.lena.clusterName }}
          - -cl
          - {{ .Values.lena.clusterName }}
          {{end}}
          - -sn
          - {{ template "lena.fullname" . }}
          - -xmx
          - {{ .Values.javaOptions.Xmx }}
          - -xpx
          - {{ .Values.javaOptions.MaxMetaspaceSize }}
          - -ta
          - {{ .Values.tunaServerIp }}
          name: {{ .Chart.Name }}
          env:
          - name: CATALINA_OPTS
            value: -DserverName={{ template "lena.fullname" . }}
          image: {{ .Values.image.lena.repository }}:{{ .Values.image.lena.tag }}
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          volumeMounts:
            - name: app-volume
              mountPath: {{ .Values.deploy.directory }}
          ports:
            - containerPort: {{ .Values.service.internalPort }}
          livenessProbe:
            httpGet:
              path: {{ .Values.livenessProbe.path }}
              port: {{ .Values.service.internalPort }}
            initialDelaySeconds: {{ .Values.livenessProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.livenessProbe.periodSeconds }}
          readinessProbe:
            httpGet:
              path: {{ .Values.readinessProbe.path }}
              port: {{ .Values.service.internalPort }}
            initialDelaySeconds: {{ .Values.readinessProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.readinessProbe.periodSeconds }}
            failureThreshold: {{ .Values.readinessProbe.failureThreshold }}
          resources:
{{ toYaml .Values.resources | indent 12 }}
    {{- if .Values.image.pullSecrets }}
      imagePullSecrets:
{{ toYaml .Values.image.pullSecrets | indent 8 }}
    {{- end }}
    {{- if .Values.nodeSelector }}
      nodeSelector:
{{ toYaml .Values.nodeSelector | indent 8 }}
    {{- end }}
    {{- if .Values.tolerations }}
      tolerations:
{{ toYaml .Values.tolerations | indent 8 }}
    {{- end }}
